import edu.princeton.cs.algs4.Stack;

public class App {
    public static void main(String[] args) {
        int[][] maze = {
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                {0,1,0,0,1,0,0,0,1,1,0,1,0,1,0},
                {1,1,0,1,0,0,0,0,0,0,1,0,1,1,0},
                {1,0,0,1,0,0,1,1,1,0,1,0,0,1,0},
                {0,0,0,0,0,1,1,0,0,0,1,0,1,1,0},
                {1,0,1,1,0,0,1,0,1,0,0,0,0,0,0},
                {0,0,0,1,0,1,1,0,1,1,0,1,1,1,1},
                {1,0,0,1,1,0,0,0,0,0,0,0,0,1,0},
                {1,1,1,1,0,0,1,1,1,1,0,1,1,1,0},
                {1,0,0,0,0,1,0,0,0,1,1,0,0,1,0},
                {1,0,1,1,1,0,0,1,0,0,1,0,0,0,0},
                {0,0,0,0,0,0,1,1,0,0,1,0,1,1,0},
                {1,0,1,0,1,1,0,0,0,0,1,0,1,1,0},
                {1,0,0,0,1,0,0,1,1,1,1,0,1,1,0},
                {1,1,0,1,1,1,0,0,0,0,0,0,1,1,0}
        };

        ARAStar araStar = new ARAStar(maze, 5, 0.9);
        while (true) {
            Stack<Node> path = araStar.iterate();
            if (path != null) {
                // for (Node node : path) {
                //     System.out.print(node.row + " " + node.col + " ");
                // }
                // System.out.println();
            } else {
                break;
            }
        }
    }
}
